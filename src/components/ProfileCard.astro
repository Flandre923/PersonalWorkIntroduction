---
// 组件：ProfileCard.astro
import profileData from "../data/skillTableData.json"; // Import the whole JSON object
const skillTableData = profileData.skillTableData; // Extract skill table data
const socialAccountsData = profileData.socialAccounts; // Extract social accounts data
---

<div class="profile-container">
    <div class="left-card card">
        <div class="avatar-container">
            {/* 使用 <img> 标签显示图片 */}
            <img src="/images/avatar.png" alt="头像" class="avatar-img" />
        </div>
        <div class="name-container">
            <div class="name">Flandre923</div>
        </div>

        <div class="description-container">
            <p class="description-text">
                热衷于知识汲取与技术分享，拥有广泛的学习兴趣。<br />
                目前正在积极寻求发展机会。
            </p>
        </div>

        <div class="language-stats">
            <div class="language-chart">
                <img
                    src="https://github-readme-stats.vercel.app/api/top-langs?username=Flandre923&layout=compact&locale=cn&hide=HTML,JavaScript"
                    alt="GitHub Stats Animation"
                    class="language-chart-img"
                />
            </div>
        </div>
    </div>

    <div class="right-card card">
        <div class="stats-and-social">
            <div class="stats-image">
                <img
                    src="https://github-readme-stats.vercel.app/api?username=Flandre923&show_icons=true&include_all_commits=true&line_height=21&locale=cn"
                    alt="Flandre923 的 GitHub 统计数据"
                    class="github-stats-img"
                />
            </div>

            <div class="social-accounts-container">
                <div class="social-accounts-title">在哪里可以找到我</div>
                <div class="social-accounts">
                    {
                        socialAccountsData.accounts.map(
                            (
                                account, // Loop through accounts array
                            ) => (
                                <a
                                    href={account.href}
                                    class={`social-link ${account.class}`}
                                >
                                    <Fragment set:html={account.badge} />{" "}
                                    {/* Render badge HTML */}
                                </a>
                            ),
                        )
                    }
                </div>
            </div>
        </div>

        <table>
            <thead>
                <tr>
                    <th></th>
                    <th>熟悉<br />Familiar</th>
                    <th>了解一点<br />Understand A Little</th>
                    <th>学了皮毛<br /> Just Learned</th>
                </tr>
            </thead>
            <tbody>
                {
                    skillTableData.map((row) => (
                        <tr>
                            <td set:html={row.category} />
                            <td>
                                {row.familiar.map((badge) => (
                                    <Fragment set:html={badge} />
                                ))}
                            </td>
                            <td>
                                {row.understandALittle.map((badge) => (
                                    <Fragment set:html={badge} />
                                ))}
                            </td>
                            <td>
                                {row.justLearned.map((badge) => (
                                    <Fragment set:html={badge} />
                                ))}
                            </td>
                        </tr>
                    ))
                }
            </tbody>
        </table>
    </div>
</div>

<style>
    .profile-container {
        display: flex;
        gap: 20px;
        width: 85%; /* 修改为百分比宽度，占据屏幕大部分宽度 */
        max-width: 1400px; /*  保留最大宽度限制，在大屏幕上不会过宽 */
        margin: 20px auto; /*  居中显示，并添加外边距 */
        padding: 20px; /* 容器内边距 */
        position: absolute; /* 改为 absolute 定位 */
        z-index: 2; /* 设置 z-index 值，使其高于 Header */
        top: 250px; /* 调整 top 值，使其叠放在 Header 上方，初始值可以尝试 200px，根据实际情况调整 */
        left: 50%; /* 水平居中 */
        transform: translateX(-50%); /* 配合 left: 50% 实现绝对水平居中 */
    }

    .card {
        border-radius: 15px;
        background-color: rgba(255, 255, 255, 0.2); /* 半透明白色 */
        backdrop-filter: blur(4px); /* 磨砂玻璃效果 */
        border: 1px solid rgba(255, 255, 255, 0.2); /*  可选：添加更明显的边框 */
        padding: 20px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1); /*  可选：轻微阴影 */
    }

    .left-card {
        width: 30%; /* 左侧卡片宽度 */
        display: flex;
        flex-direction: column;
        align-items: center; /*  内容水平居中 */
    }

    .right-card {
        width: 70%; /* 右侧卡片宽度 */
        display: flex;
        flex-direction: column;
    }

    /* 头像部分 */
    .avatar-container {
        width: 120px; /*  头像容器宽度 */
        height: 120px; /*  头像容器高度 */
        border-radius: 50%; /*  圆形头像 */
        border: 2px solid #fff; /*  白色边框 */
        overflow: hidden; /*  裁剪超出边框的内容 */
        margin-bottom: 15px; /*  与姓名容器的间距 */
        display: flex;
        justify-content: center;
        align-items: center;
        background-color: rgba(255, 255, 255, 0.5); /* 头像背景色 */
    }

    .avatar-img {
        width: 100%; /*  图片宽度撑满容器 */
        height: 100%; /*  图片高度撑满容器 */
        object-fit: contain; /*  修改为 contain，完整显示图片 */
        border-radius: 50%; /*  保持圆形 */
        display: block; /*  去除图片底部默认间距 */
    }
    /* 姓名部分 */
    .name-container {
        margin-bottom: 5px; /*  与语言统计的间距 */
    }

    .name {
        font-size: 1.8em; /*  姓名文字大小 */
        font-weight: bold; /*  姓名文字加粗 */
        text-align: center; /*  姓名文字居中 */
        padding: 10px 20px;
        border-radius: 10px;
        /* background-color: rgba(255, 255, 255, 0.5); /* 姓名背景色 */
    }

    .language-chart {
        height: 150px; /*  饼图高度 */
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        background-color: rgba(255, 255, 255, 0.3); /*  饼图背景色 */
        border-radius: 10px;
        margin-bottom: 10px;
        color: #555; /* 饼图文字颜色 */
    }

    .language-chart-img {
        width: 100%; /*  图片宽度撑满容器 */
        height: auto; /*  高度自适应，保持比例 */
        display: block; /*  去除图片底部默认间距 */
    }

    .right-card .stats-and-social {
        display: flex; /* Make wrapper div a flex container */
        flex-direction: row; /* Arrange items in a row (side-by-side) */
        gap: 10px; /* Add some space between stats and social sections */
    }

    .right-card .stats-image {
        flex: 1; /* Allow stats image to take available space */
    }

    .right-card .social-accounts-container {
        flex: 1; /* Allow social accounts to take available space */
        min-width: 0; /* Prevent social accounts from collapsing too much */

        border: 1px solid rgb(223, 220, 220); /*  添加黑色边框 */
        border-radius: 5px; /*  添加圆角，与卡片圆角一致 */
        padding: 15px; /*  添加一些内边距，使内容与边框之间有空间 */
        background-color: transparent; /*  设置为透明背景，如果不需要背景色 */
    }

    .description-container {
        margin-top: 10px; /* Add some space between name and description */
        margin-bottom: 20px; /* Add space between description and language stats */
        padding: 0 20px; /* Add horizontal padding for text within container */
        text-align: center; /* Center-align the text */
    }

    .description-text {
        margin: 0;
        font-size: 1em; /* Adjust font size as needed */
        line-height: 1.6; /* Improve readability with line height */
        color: #f0f0f0; /* Choose a suitable text color, e.g., gray */
    }

    :global(table) {
        width: 100%;
        border-collapse: collapse;
        color: black; /* 设置字体颜色为黑色 */
        margin-top: 20px; /*  与上方的 stats-image 隔开一些距离 */
        border: 1px solid #c5c5c5; /* 表格外边框改为深灰色 */
    }

    :global(th),
    :global(td) {
        border: 1px solid #cccaca !important; /* 单元格边框改为深灰色，并提高优先级 */
        padding: 8px;
        text-align: center;
    }

    :global(thead),
    :global(tbody tr:last-child td) {
        /*  thead 也添加 border-bottom, 确保分隔线显示 */
        border-bottom: 1px solid #dfdfdf; /* 表头底部边框改为深灰色 */
    }

    :global(th) {
        font-weight: bold;
    }

    :global(td:first-child) {
        text-align: left; /*  第一列文字左对齐 */
    }

    .social-accounts-title {
        font-size: 1em; /*  尝试减小字体到 1.1em，您可以根据需要调整 */
        font-weight: normal; /* 尝试设置为 normal，或者 lighter */
        margin-bottom: 2px;
        display: flex;
        align-items: center;
        color: #353131; /*  假设您希望使用浅灰色，可以调整为 #fff (白色) 或其他颜色 */
        font-family: Arial, sans-serif; /*  设置为 Arial 或您网站使用的字体 */
    }
    .social-accounts-title span {
        margin-right: 5px;
        color: #aaa; /* 图标颜色 */
    }

    .social-accounts {
        display: flex;
        gap: 2px;
    }

    .social-link {
        display: inline-block;
        padding-right: 2px;
        border-radius: 20px;
        text-decoration: none;
        font-size: 0.9em;
    }

    /*  iconfont 示例，你需要引入你自己的 iconfont 库 */
    .iconfont {
        font-family: "iconfont" !important;
        font-size: 16px;
        font-style: normal;
        -webkit-font-smoothing: antialiased;
        -moz-osx-font-smoothing: grayscale;
    }
    .icon-pullrequest:before {
        content: "\e63c";
    }

    /*  响应式设计 (可选) */
    @media (max-width: 768px) {
        .profile-container {
            flex-direction: column; /*  改为垂直排列 */
            width: 95%; /* 手机屏幕上宽度也占据 95% */
            position: relative; /*  改为相对定位，或者根据需要调整 */
            top: auto; /*  取消 top 定位 */
            left: auto; /* 取消 left 定位 */
            transform: none; /*  取消 transform */
            margin-top: 20px; /*  调整顶部外边距 */
        }
        .name {
            font-size: 1.6em; /* 手机上姓名文字稍微小一点 */
        }
        .description-text,
        .social-accounts-title,
        :global(td),
        :global(th) {
            font-size: 0.9em; /*  手机上表格和描述文字可以适当减小 */
        }
        .left-card,
        .right-card {
            width: 100%; /*  小屏幕卡片宽度100% */
        }
        .language-chart {
            height: auto; /*  允许语言图表高度自适应，避免固定高度在小屏幕上溢出 */
        }
        .right-card .stats-and-social {
            flex-direction: column; /*  统计和社交账号垂直排列 */
        }
        .skill-table {
            flex-direction: column; /*  小屏幕技能表格垂直排列 */
        }
    }
</style>
