---
import Card from "../components/WorkCard.astro";


interface Props {
    showTitle: string;
    projectData: { // 定义 projectData 的类型
        imageSrc: string;
        title: string;
        description: string;
        tags: string[];
        links: {
            text: string;
            icon?: string;
            link: string;
        }[];
    }[];
}
const { showTitle, projectData } = Astro.props; // 接收 projectData 属性
// const projects = [
//     {
//         imageSrc: "/images/fabric_icon.png", // Replace with your image path
//         title: "Fabric API",
//         description:
//             "Lightweight and modular API providing common hooks and intercompatibility measures utilized by mods using the Fabric toolchain.",
//         tags: ["Untity", "Game", "C#"],
//         links: [
//             // Add links data here
//             { text: "Bilibili", icon: "💻", link: "https://www.bilibili.com" }, // Example with icon (using text for now)
//             { text: "Github", icon: "🪡", link: "https://www.github.com" },
//         ],
//     },
//     {
//         imageSrc: "/images/fabric_icon.png", // Replace with your image path
//         title: "Fabric API",
//         description:
//             "Lightweight and modular API providing common hooks and intercompatibility measures utilized by mods using the Fabric toolchain.",
//         tags: ["Untity", "Game", "C#"],
//         links: [
//             // Add links data here
//             { text: "Bilibili", icon: "💻", link: "https://www.bilibili.com" }, // Example with icon (using text for now)
//             { text: "Github", icon: "🪡", link: "https://www.github.com" },
//         ],
//     },
//        {
//         imageSrc: "/images/fabric_icon.png", // Replace with your image path
//         title: "Fabric API",
//         description:
//             "Lightweight and modular API providing common hooks and intercompatibility measures utilized by mods using the Fabric toolchain.",
//         tags: ["Untity", "Game", "C#"],
//         links: [
//             // Add links data here
//             { text: "Bilibili", icon: "💻", link: "https://www.bilibili.com" }, // Example with icon (using text for now)
//             { text: "Github", icon: "🪡", link: "https://www.github.com" },
//         ],
//     },
//        {
//         imageSrc: "/images/fabric_icon.png", // Replace with your image path
//         title: "Fabric API",
//         description:
//             "Lightweight and modular API providing common hooks and intercompatibility measures utilized by mods using the Fabric toolchain.",
//         tags: ["Untity", "Game", "C#"],
//         links: [
//             // Add links data here
//             { text: "Bilibili", icon: "💻", link: "https://www.bilibili.com" }, // Example with icon (using text for now)
//             { text: "Github", icon: "🪡", link: "https://www.github.com" },
//         ],
//     },

//     // ... 更多项目
// ];
---

<div class="portfolio-container">
    <div class="portfolio-header">
        <h1>{showTitle}</h1>
        <hr />
    </div>
    <div class="projects-grid">
        {
            projectData.map((project) => (
                <Card
                   imageSrc={project.imageSrc}
                    title={project.title}
                    description={project.description}
                    tags={project.tags}
                    links={project.links}
                />
            ))
        }
    </div>
</div>

<style>
    .portfolio-container {
        display: flex;
        flex-direction: column;
        align-items: center;  水平居中内容 */
        width: 100%;
        padding: 20px;
    }

    .portfolio-header {
        display: flex;
        flex-direction: column;
        align-items: center; /* 标题和横线居中对齐 */
        margin-bottom: 20px; /* 标题和网格之间的间距 */
        width: 100%; /*  让 portfolio-header 宽度撑满 portfolio-container */
    }

    .portfolio-header h1 {
        margin-bottom: 10px; /* 标题与横线之间的间距 */
        font-size: 2rem; /* 调整标题字体大小 */
    }

    .portfolio-header hr {
        width: 80%; /*  设置为 80% 宽度，与 projects-grid 一致 */
        border: 0;
        border-top: 2px solid #777777; /* 横线样式 */
        margin: 0 auto; /*  添加左右 margin auto 实现水平居中 */

    }

    .projects-grid {
        display: grid;
        grid-template-columns: repeat(
            auto-fill,
            minmax(500px, 2fr)
        ); /* 响应式网格布局 */
        gap: 20px; /* 网格项之间的间距 */
        /* padding: 20px;  从容器移动到容器的 padding */
        width: 80%; /* 网格宽度，控制左右留空，可以调整 */
        max-width: 1200px; /*  限制最大宽度，防止过宽 */
    }

    @media (max-width: 768px) {
    .projects-grid {
        grid-template-columns: 1fr; /* 手机上改为一列 */
        width: 95%; /*  手机上宽度占据 95% */
    }
}
</style>
